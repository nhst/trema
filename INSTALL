Pre-requirements
================

Before installing Trema, please make sure that your environment
satisfies the following requirements:

- Operating system

Trema has been tested on the following GNU/Linux distributions:

  Ubuntu 11.04 (i386/amd64, Desktop Edition)
  Ubuntu 10.10 (i386/amd64, Desktop Edition)
  Ubuntu 10.04 (i386/amd64, Desktop Edition)
  Debian GNU/Linux 6.0 (i386/amd64)

Trema may also run on other GNU/Linux distributions but is not tested
and NOT SUPPORTED at this moment.

- Third-party software

Trema relies on the following third-party software.

  GCC
  GNU Make
  Ruby
  SQLite
  Sudo
  file
  libpcap

If you are using Ubuntu or Debian GNU/Linux 6.0 you can simply install
them as follows. Other packages than listed below should have been
installed by default operating system installation or will be installed
automatically due to install dependencies.

  # apt-get install gcc make ruby ruby-dev sudo file libpcap-dev \
  libsqlite3-dev


How to build and install
========================

  $ tar xzvf trema.tar.gz
  $ cd trema
  $ ./build.rb


How to run a sample application
===============================

The following command allows you to run a sample application named
"learning switch" that emulates a layer2 switch with a single
OpenFlow switch.

  $ ./trema run ./objects/examples/learning_switch/learning_switch

For detailed explanation on the command, please refer to the documents
found on http://trema.github.com/trema/.


(Optional) Automated build and test script
==========================================

The file "cruise.rb" in the top-level source tree is an automated
build and test script. It builds Trema, then runs unit tests and
system-level tests of sample applications with emulated OpenFlow
networks.

Before running the script, the following software packages are required.

  Cucumber
  RCov
  RSpec
  Rake
  RubyGems

If you are using Ubuntu or Debian GNU/Linux 6.0,  you can install them
as follows:

  $ sudo apt-get install rubygems
  $ sudo gem install cucumber rspec rcov rake --remote

To execute the script, simply type as follows:

  $ ./cruise.rb
